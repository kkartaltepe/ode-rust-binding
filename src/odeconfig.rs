/* automatically generated by rust-bindgen */

pub type dint64 = ::libc::c_longlong;
pub type duint64 = ::libc::c_ulonglong;
pub type dint32 = ::libc::c_int;
pub type duint32 = ::libc::c_uint;
pub type dint16 = ::libc::c_short;
pub type duint16 = ::libc::c_ushort;
pub type dint8 = ::libc::c_char;
pub type duint8 = ::libc::c_uchar;
pub type size_t = ::libc::size_t;
pub type time_t = ::libc::c_long;
pub type ptrdiff_t = ::libc::c_long;
pub type va_list = __gnuc_va_list;
pub type __gnuc_va_list = __builtin_va_list;
pub type __builtin_va_list = [__va_list_tag; 1usize];
pub type __va_list_tag = Struct___va_list_tag;
#[repr(C)]
#[derive(Copy)]
pub struct Struct___va_list_tag {
    pub gp_offset: ::libc::c_uint,
    pub fp_offset: ::libc::c_uint,
    pub overflow_arg_area: *mut ::libc::c_void,
    pub reg_save_area: *mut ::libc::c_void,
}
impl ::std::clone::Clone for Struct___va_list_tag {
    fn clone(&self) -> Struct___va_list_tag { *self }
}
impl ::std::default::Default for Struct___va_list_tag {
    fn default() -> Struct___va_list_tag { unsafe { ::std::mem::zeroed() } }
}


#[repr(C)]
#[derive(Copy)]
pub struct Struct__IO_marker {
    pub _next: *mut Struct__IO_marker,
    pub _sbuf: *mut Struct__IO_FILE,
    pub _pos: ::libc::c_int,
}
impl ::std::clone::Clone for Struct__IO_marker {
    fn clone(&self) -> Struct__IO_marker { *self }
}
impl ::std::default::Default for Struct__IO_marker {
    fn default() -> Struct__IO_marker { unsafe { ::std::mem::zeroed() } }
}

pub type __off_t = ::libc::c_long;
pub type _IO_lock_t = ::libc::c_void;
pub type __off64_t = ::libc::c_long;

#[repr(C)]
#[derive(Copy)]
pub struct Struct__IO_FILE {
    pub _flags: ::libc::c_int,
    pub _IO_read_ptr: *mut ::libc::c_char,
    pub _IO_read_end: *mut ::libc::c_char,
    pub _IO_read_base: *mut ::libc::c_char,
    pub _IO_write_base: *mut ::libc::c_char,
    pub _IO_write_ptr: *mut ::libc::c_char,
    pub _IO_write_end: *mut ::libc::c_char,
    pub _IO_buf_base: *mut ::libc::c_char,
    pub _IO_buf_end: *mut ::libc::c_char,
    pub _IO_save_base: *mut ::libc::c_char,
    pub _IO_backup_base: *mut ::libc::c_char,
    pub _IO_save_end: *mut ::libc::c_char,
    pub _markers: *mut Struct__IO_marker,
    pub _chain: *mut Struct__IO_FILE,
    pub _fileno: ::libc::c_int,
    pub _flags2: ::libc::c_int,
    pub _old_offset: __off_t,
    pub _cur_column: ::libc::c_ushort,
    pub _vtable_offset: ::libc::c_char,
    pub _shortbuf: [::libc::c_char; 1usize],
    pub _lock: *mut _IO_lock_t,
    pub _offset: __off64_t,
    pub __pad1: *mut ::libc::c_void,
    pub __pad2: *mut ::libc::c_void,
    pub __pad3: *mut ::libc::c_void,
    pub __pad4: *mut ::libc::c_void,
    pub __pad5: size_t,
    pub _mode: ::libc::c_int,
    pub _unused2: [::libc::c_char; 20usize],
}
impl ::std::clone::Clone for Struct__IO_FILE {
    fn clone(&self) -> Struct__IO_FILE { *self }
}
impl ::std::default::Default for Struct__IO_FILE {
    fn default() -> Struct__IO_FILE { unsafe { ::std::mem::zeroed() } }
}
pub type _IO_FILE = Struct__IO_FILE;
pub type FILE = _IO_FILE;
