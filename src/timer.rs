/* automatically generated by rust-bindgen */

use odeconfig::*;

#[repr(C)]
#[derive(Copy)]
pub struct Struct_dStopwatch {
    pub time: ::libc::c_double,
    pub cc: [::libc::c_ulong; 2usize],
}
impl ::std::clone::Clone for Struct_dStopwatch {
    fn clone(&self) -> Struct_dStopwatch { *self }
}
impl ::std::default::Default for Struct_dStopwatch {
    fn default() -> Struct_dStopwatch { unsafe { ::std::mem::zeroed() } }
}
pub type dStopwatch = Struct_dStopwatch;

#[link(name="ode")]
extern "C" {
    pub fn dStopwatchReset(arg1: *mut dStopwatch) -> ();
    pub fn dStopwatchStart(arg1: *mut dStopwatch) -> ();
    pub fn dStopwatchStop(arg1: *mut dStopwatch) -> ();
    pub fn dStopwatchTime(arg1: *mut dStopwatch) -> ::libc::c_double;
    pub fn dTimerStart(description: *const ::libc::c_char) -> ();
    pub fn dTimerNow(description: *const ::libc::c_char) -> ();
    pub fn dTimerEnd() -> ();
    pub fn dTimerReport(fout: *mut FILE, average: ::libc::c_int) -> ();
    pub fn dTimerTicksPerSecond() -> ::libc::c_double;
    pub fn dTimerResolution() -> ::libc::c_double;
}
