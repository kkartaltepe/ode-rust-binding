/* automatically generated by rust-bindgen */

use common::*;

#[link(name="ode")]
extern "C" {
    pub fn dRSetIdentity(R: dMatrix3) -> ();
    pub fn dRFromAxisAndAngle(R: dMatrix3, ax: dReal, ay: dReal, az: dReal,
                              angle: dReal) -> ();
    pub fn dRFromEulerAngles(R: dMatrix3, phi: dReal, theta: dReal,
                             psi: dReal) -> ();
    pub fn dRFrom2Axes(R: dMatrix3, ax: dReal, ay: dReal, az: dReal,
                       bx: dReal, by: dReal, bz: dReal) -> ();
    pub fn dRFromZAxis(R: dMatrix3, ax: dReal, ay: dReal, az: dReal) -> ();
    pub fn dQSetIdentity(q: dQuaternion) -> ();
    pub fn dQFromAxisAndAngle(q: dQuaternion, ax: dReal, ay: dReal, az: dReal,
                              angle: dReal) -> ();
    pub fn dQMultiply0(qa: dQuaternion, qb: dQuaternion, qc: dQuaternion)
     -> ();
    pub fn dQMultiply1(qa: dQuaternion, qb: dQuaternion, qc: dQuaternion)
     -> ();
    pub fn dQMultiply2(qa: dQuaternion, qb: dQuaternion, qc: dQuaternion)
     -> ();
    pub fn dQMultiply3(qa: dQuaternion, qb: dQuaternion, qc: dQuaternion)
     -> ();
    pub fn dRfromQ(R: dMatrix3, q: dQuaternion) -> ();
    pub fn dQfromR(q: dQuaternion, R: dMatrix3) -> ();
    pub fn dDQfromW(dq: *mut dReal, w: dVector3, q: dQuaternion) -> ();
}
