/* automatically generated by rust-bindgen */

use odeconfig::*;

pub type dAllocFunction = extern "C" fn(size: size_t) -> *mut ::libc::c_void;
pub type dReallocFunction =
    extern "C" fn(ptr: *mut ::libc::c_void, oldsize: size_t, newsize: size_t)
        -> *mut ::libc::c_void;
pub type dFreeFunction =
    extern "C" fn(ptr: *mut ::libc::c_void, size: size_t) -> ();

#[link(name="ode")]
extern "C" {
    pub fn dSetAllocHandler(_fn:
                                *mut ::std::option::Option<extern "C" fn()
                                                               ->
                                                                   *mut ::libc::c_void>)
     -> ();
    pub fn dSetReallocHandler(_fn:
                                  *mut ::std::option::Option<extern "C" fn()
                                                                 ->
                                                                     *mut ::libc::c_void>)
     -> ();
    pub fn dSetFreeHandler(_fn:
                               *mut ::std::option::Option<extern "C" fn()
                                                              -> ()>) -> ();
    pub fn dGetAllocHandler()
     -> *mut ::std::option::Option<extern "C" fn() -> *mut ::libc::c_void>;
    pub fn dGetReallocHandler()
     -> *mut ::std::option::Option<extern "C" fn() -> *mut ::libc::c_void>;
    pub fn dGetFreeHandler()
     -> *mut ::std::option::Option<extern "C" fn() -> ()>;
    pub fn dAlloc(size: size_t) -> *mut ::libc::c_void;
    pub fn dRealloc(ptr: *mut ::libc::c_void, oldsize: size_t,
                    newsize: size_t) -> *mut ::libc::c_void;
    pub fn dFree(ptr: *mut ::libc::c_void, size: size_t) -> ();
}
